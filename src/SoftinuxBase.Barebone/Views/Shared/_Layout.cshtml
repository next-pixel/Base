@*
    Copyright © 2017 SOFTINUX. All rights reserved.
    Licensed under the MIT License, Version 2.0. See License.txt in the project root for license information.
*@

@using Microsoft.Extensions.Options;
@using SoftinuxBase.Infrastructure
@using SoftinuxBase.Barebone.Tools;
@inject IOptions<CorporateConfiguration> OptionsApplicationConfiguration

<!DOCTYPE html>
<html lang="en" @if (!User.Identity.IsAuthenticated) { @Html.Raw("class=\"login-page\"") }>
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">

    <title>@Html.Raw(ViewBag.Title as string)</title>
    @await Component.InvokeAsync("StyleSheets")
    <script>window.on_page_functions = [];</script>
    @RenderSection("Styles", false)
</head>
@{
    string authClass = !User.Identity.IsAuthenticated ? "h-vh-100 d-flex flex-justify-center flex-align-center" : "m4-cloak h-vh-100";
    // use typed "properties" variable else the compiler isn't able to understand the LINQ expression.
    System.Reflection.PropertyInfo[] properties = Model?.GetType().GetProperties();
    bool hasModelWithErrorMessageProperty = properties != null && properties.Any(p => p.Name.Equals("ErrorMessage"));
}
<body class="@authClass">
    <div class="notify-container"></div>
    @if (User.Identity.IsAuthenticated)
    {
        <div data-role="navview" data-toggle="#paneToggle" data-expand="xl" data-compact="lg" data-active-state="true">
            <div class="navview-pane">
                <div class="bg-cyan d-flex flex-align-center">
                    <button class="pull-button m-0 bg-darkCyan-hover">
                        <span class="mif-menu fg-white"></span>
                    </button>
                    @* TODO add brand title here *@
                    <h2 class="text-light m-0 fg-white pl-7" style="line-height: 52px">SOFTINUX</h2>
                </div>
                
                <ul class="navview-menu mt-4" id="side-menu">
                    <li class="item-header">MAIN NAVIGATION</li>
                     <li>
                        <a href="#dashboard">
                            <span class="icon"><span class="mif-meter"></span></span>
                            <span class="caption">Dashboard</span>
                        </a>
                    </li>
                    @await Component.InvokeAsync("Menu")
                </ul>
                
                <div class="w-100 text-center text-small data-box p-2 border-top bd-grayMouse" style="position: absolute; bottom: 0">
                    <div>© 2019 <a href="#" class="text-muted fg-white-hover no-decor">Softinux</a></div>
                    <div>Created with <a href="https://metroui.org.ua" class="text-muted fg-white-hover no-decor">Metro 4</a></div>
                </div>
            </div>

            <div class="navview-content h-100">
                <div data-role="appbar" class="pos-absolute bg-darkCyan fg-white app-bar">
                    
                    <a href="#" class="app-bar-item d-block d-none-lg" id="paneToggle"><span class="mif-menu"></span></a>
                    
                    <div class="app-bar-container ml-auto">
                        <div class="app-bar-container">
                            <a href="#" class="app-bar-item">
                                <img src="images/jek_vorobey.jpg" class="avatar">
                                <span class="ml-2 app-bar-name">Jack Sparrow</span>
                            </a>
                            <div class="user-block shadow-1" data-role="collapse" data-collapsed="true">
                                <div class="bg-darkCyan fg-white p-2 text-center">
                                    <img src="images/jek_vorobey.jpg" class="avatar">
                                    <div class="h4 mb-0">Jack Sparrow</div>
                                    <div>Pirate captain</div>
                                </div>
                                <div class="bg-white d-flex flex-justify-between flex-equal-items p-2">
                                    
                                </div>
                                <div class="bg-white d-flex flex-justify-between flex-equal-items p-2 bg-light">
                                    <button class="button mr-1">Profile</button>
                                    <button class="button ml-1">Sign out</button>
                                </div>
                            </div>
                        </div>
                        <a href="#" class="app-bar-item">
                            <span class="mif-cogs"></span>
                        </a>
                    </div>

                </div>
                
                <div id="content-wrapper" class="content-inner h-100" style="overflow-y: auto">
                    <div class="row border-bottom bd-lightGray m-3">
                        <div class="cell-md-4 text-center text-left-md">
                            <h3 class="dashboard-section-title">@RenderSection("title", false) <small>Version 0.1.0</small></h3>
                        </div>
                    
                        <div class="cell-md-8 d-flex flex-justify-center flex-justify-end-md">
                            <ul class="breadcrumbs bg-transparent">
                                <li class="page-item"><a href="#" class="page-link"><span class="mif-meter"></span></a></li>
                                <li class="page-item"><a href="#" class="page-link">Need to render title also here</a></li>
                            </ul>
                        </div>
                    </div>
                    @RenderBody()
                </div>
            </div>
        </div>
    }
    else
    {
        @RenderBody();
    }

    @await Component.InvokeAsync("Scripts")
    @if (!User.Identity.IsAuthenticated)
    {
        <script type="text/javascript">
            $("input").keypress(function (event) {
                if (event.which == 13) {
                    event.preventDefault();
                    $("form").submit();
                }
            });
        </script>
    }
    @if (User.Identity.IsAuthenticated)
    {
        @RenderSection("Scripts", false)
    }
    @RenderSection("ScriptsUnauthenticated", false)
</body>
</html>
